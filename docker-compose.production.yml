services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: authgrid-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-authgrid}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: authgrid
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - authgrid-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authgrid"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authgrid API server
  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    container_name: authgrid-api
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER:-authgrid}:${POSTGRES_PASSWORD}@postgres:5432/authgrid?sslmode=disable"
      PORT: "8080"
      AUTHGRID_DOMAIN: "authgrid.org"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - authgrid-network

  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: authgrid-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./examples/demo:/usr/share/nginx/html:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - authgrid-network

  # Certbot for Let's Encrypt SSL
  certbot:
    image: certbot/certbot
    container_name: authgrid-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped
    networks:
      - authgrid-network

volumes:
  postgres-data:

networks:
  authgrid-network:
    driver: bridge
